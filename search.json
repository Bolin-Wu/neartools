[{"path":"https://bolin-wu.github.io/neartools/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 neartools authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://bolin-wu.github.io/neartools/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Bolin Wu. Author, maintainer.","code":""},{"path":"https://bolin-wu.github.io/neartools/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Wu B (2025). neartools: Useful Tools Daily NEAR Work Tasks. R package version 1.1.0, https://github.com/Bolin-Wu/neartools.","code":"@Manual{,   title = {neartools: Useful Tools for Daily NEAR Work Tasks},   author = {Bolin Wu},   year = {2025},   note = {R package version 1.1.0},   url = {https://github.com/Bolin-Wu/neartools}, }"},{"path":"https://bolin-wu.github.io/neartools/index.html","id":"motivation","dir":"","previous_headings":"","what":"Useful Tools for Daily NEAR Work Tasks","title":"Useful Tools for Daily NEAR Work Tasks","text":"many repetitive works data harmonization keeping track communication database managers researchers. goal package practice “don’t repeat ” (DRY) principle, making daily work handy.","code":""},{"path":"https://bolin-wu.github.io/neartools/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Useful Tools for Daily NEAR Work Tasks","text":"can install development version neartools GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"Bolin-Wu/neartools\", force = TRUE)"},{"path":"https://bolin-wu.github.io/neartools/index.html","id":"example-data","dir":"","previous_headings":"","what":"Example data","title":"Useful Tools for Daily NEAR Work Tasks","text":"package contains example data sets test functions.","code":"library(neartools) # read data fake_snack_df <- fake_snack_df fake_caide_df <- fake_caide_df df_dup_id <- df_dup_id"},{"path":"https://bolin-wu.github.io/neartools/index.html","id":"r-markdown-templates","dir":"","previous_headings":"","what":"R markdown templates","title":"Useful Tools for Daily NEAR Work Tasks","text":"get_pretty_template: Automatically create & open rmd file nice looking template. facilitates communication researchers & tracking records. User can choose output file word”, “pdf” “html”. default complies “word” file.","code":"# create & open a rmd file get_pretty_template(   subDir = \"Enquiry/db\",   name = \"Data_inspection_db\",   output_file = \"word\" )"},{"path":"https://bolin-wu.github.io/neartools/index.html","id":"data-inspection","dir":"","previous_headings":"","what":"Data inspection","title":"Useful Tools for Daily NEAR Work Tasks","text":"get_label_df: Get labels data frame. filtering result, users can quickly select interested variables check missing value percentages. get_date_digit: Inspect date numeric digit form. Filter dates required form. get_all_colnames: Gather multiple data files examine columns’ names, labels missing value percentages together. get_dup_id: Check existence ID duplication pinpoint . useful deciding row keep find duplicated IDs (e.g. using get_dup_id()). function conquers problem ‘NA’ values comparing columns. available functions default returns ‘NA’ long missing value columns. However, also want know columns one record gives “NA” values.","code":"# get the label of SPSS and STATA files imported in R label_df <- get_label_df(df_w_label = fake_snack_df) # get the date digits and find wrong ones get_date_digit(   df_arg = fake_snack_df,   id_string = \"Lop\",   date_string = \"numeric_date\",   required_digits = 8,   required_leading_num = 1 ) # get columns of all interested data files df_files <- c(\"fake_snack_df\", \"fake_caide_df\") get_all_colnames(df_name = df_files) # check ID duplication get_dup_id(df = df_dup_id, id_str = \"id\") # find duplicared IDs dup_id <- get_dup_id(df = df_dup_id, id_str = \"id\")$replicated_id  get_diff_cols(data = df_dup_id, id_str = \"id\", id_num = dup_id[1])"},{"path":"https://bolin-wu.github.io/neartools/index.html","id":"data-manipulation","dir":"","previous_headings":"","what":"Data manipulation","title":"Useful Tools for Daily NEAR Work Tasks","text":"get_unique_join: Joins multiple tibbles generates unique columns record non-NA values identical column names.","code":"get_unique_join(tibble_names = c(\"fake_snacn_ph_wave3\", \"fake_snacn_ph_fu\"),                join_type = \"full_join\",                by_cols = \"Lopnr == N1lopnr, age\")"},{"path":"https://bolin-wu.github.io/neartools/index.html","id":"data-import-and-export","dir":"","previous_headings":"","what":"Data import and export","title":"Useful Tools for Daily NEAR Work Tasks","text":"export_sav_to_csv: Convert SPSS data files (.sav) csv files. conversion needed maelstrom harmonization package read .sav data. function can prevent repetitive work converting .sav .csv one one. import_bulk: Bulk import SPSS, STATA, rds, Rdata MS Excel files R global environment. continued….","code":"# convert SPSS files export_sav_to_csv(\"original_data\", \"SNAC-K\") # bulk import db_dir <- here(\"data\", \"raw\", \"SNAC-K\") # this import all csv, sav and dta files in the 'db_dir' import_bulk(data_dir = db_dir) # this import only a specific type files import_bulk(data_dir = db_dir, file_type = \"sav\")"},{"path":"https://bolin-wu.github.io/neartools/index.html","id":"changelog","dir":"","previous_headings":"","what":"Changelog","title":"Useful Tools for Daily NEAR Work Tasks","text":"Please check NEWS.md history updates.","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/df_dup_id.html","id":null,"dir":"Reference","previous_headings":"","what":"Example data frame — df_dup_id","title":"Example data frame — df_dup_id","text":"data frame test get_dup_id function package.","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/df_dup_id.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example data frame — df_dup_id","text":"","code":"df_dup_id"},{"path":"https://bolin-wu.github.io/neartools/reference/df_dup_id.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example data frame — df_dup_id","text":"data frame 2 variables: id, num.","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/export_sav_to_csv.html","id":null,"dir":"Reference","previous_headings":"","what":"Export the SPSS data files to csv files — export_sav_to_csv","title":"Export the SPSS data files to csv files — export_sav_to_csv","text":"Maelstrom harmonization package, command 'mlstr_file_index_read()' read study specific data sets. can read commonly used .csv, .dta files, .sav (SPSS) data. Therefore function can help user transform sav data sets csv data, instead using 'read_sav()' function transform every data set one one manually.","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/export_sav_to_csv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export the SPSS data files to csv files — export_sav_to_csv","text":"","code":"export_sav_to_csv(data_folder_name, db_name, out_dir = NULL)"},{"path":"https://bolin-wu.github.io/neartools/reference/export_sav_to_csv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export the SPSS data files to csv files — export_sav_to_csv","text":"data_folder_name name folder data stored. db_name name specific database's folder, located `data_folder_name`. out_dir optional. name output directory, instead using <data_folder_name>/<db_name>/csv_format.","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/export_sav_to_csv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Export the SPSS data files to csv files — export_sav_to_csv","text":"folder called \"csv_format\" generated 'db_name's folder, storing transformed csv files.","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/export_sav_to_csv.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Export the SPSS data files to csv files — export_sav_to_csv","text":"Assume bunch `.sav` files current working directory: \"original_data/SNAC-K\". may want transform `.csv` files can recognized Maelstrom harmonization package. running function, new folder \"csv_format\" storing transformed SNAC-K csv files \"original_data/SNAC-K\".","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/export_sav_to_csv.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Export the SPSS data files to csv files — export_sav_to_csv","text":"Please make sure `original_data` folder current working directory.","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/export_sav_to_csv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Export the SPSS data files to csv files — export_sav_to_csv","text":"","code":"if (FALSE) { # \\dontrun{ export_sav_to_csv(\"original_data\", \"SNAC_K\") } # }"},{"path":"https://bolin-wu.github.io/neartools/reference/fake_caide_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Fake CAIDE data — fake_caide_df","title":"Fake CAIDE data — fake_caide_df","text":"randomized CAIDE data set, meta data preserved.","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/fake_caide_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fake CAIDE data — fake_caide_df","text":"","code":"fake_caide_df"},{"path":"https://bolin-wu.github.io/neartools/reference/fake_caide_df.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Fake CAIDE data — fake_caide_df","text":"data frame 27 variables 1000 random obs.","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/fake_caide_df.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fake CAIDE data — fake_caide_df","text":"Random values generated vroom::gen_tbl.","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/fake_snack_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Fake SNAC-K data — fake_snack_df","title":"Fake SNAC-K data — fake_snack_df","text":"randomized SNAC-K data set, metadata preserved.","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/fake_snack_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fake SNAC-K data — fake_snack_df","text":"","code":"fake_snack_df"},{"path":"https://bolin-wu.github.io/neartools/reference/fake_snack_df.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Fake SNAC-K data — fake_snack_df","text":"data frame 15 variables 3365 random obs.","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/fake_snack_df.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fake SNAC-K data — fake_snack_df","text":"Random values generated rnorm() sample().","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/fake_snacn_ph_fu.html","id":null,"dir":"Reference","previous_headings":"","what":"Fake SNAC-N data 'fake_snacn_ph_fu' — fake_snacn_ph_fu","title":"Fake SNAC-N data 'fake_snacn_ph_fu' — fake_snacn_ph_fu","text":"Simulated SNAC-N wave 3 data, cohort 1 follow-. ID 800.","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/fake_snacn_ph_fu.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fake SNAC-N data 'fake_snacn_ph_fu' — fake_snacn_ph_fu","text":"","code":"fake_snacn_ph_fu"},{"path":"https://bolin-wu.github.io/neartools/reference/fake_snacn_ph_fu.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Fake SNAC-N data 'fake_snacn_ph_fu' — fake_snacn_ph_fu","text":"data frame 4 variables 800 observations","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/fake_snacn_ph_wave3.html","id":null,"dir":"Reference","previous_headings":"","what":"Fake SNAC-N data 'fake_snacn_ph_wave3' — fake_snacn_ph_wave3","title":"Fake SNAC-N data 'fake_snacn_ph_wave3' — fake_snacn_ph_wave3","text":"Simulated SNAC-N wave 3 data, whole wave 3. ID 1000.","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/fake_snacn_ph_wave3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fake SNAC-N data 'fake_snacn_ph_wave3' — fake_snacn_ph_wave3","text":"","code":"fake_snacn_ph_wave3"},{"path":"https://bolin-wu.github.io/neartools/reference/fake_snacn_ph_wave3.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Fake SNAC-N data 'fake_snacn_ph_wave3' — fake_snacn_ph_wave3","text":"data frame 4 variables 800 observations","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/fix_empty_string.html","id":null,"dir":"Reference","previous_headings":"","what":"Fix the empty string in csv file — fix_empty_string","title":"Fix the empty string in csv file — fix_empty_string","text":"importing csv file MySQL workbench, cell empty strings, 'Wizard Import' function skip row. fix problem, need replace empty string \"NA\" can import records MySQL.","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/fix_empty_string.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fix the empty string in csv file — fix_empty_string","text":"","code":"fix_empty_string(df_name)"},{"path":"https://bolin-wu.github.io/neartools/reference/fix_empty_string.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fix the empty string in csv file — fix_empty_string","text":"df_name tibble name R. string.","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/fix_empty_string.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fix the empty string in csv file — fix_empty_string","text":"tibble empty strings replaced 'NA'.","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/fix_empty_string.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Fix the empty string in csv file — fix_empty_string","text":"replacement applies 'character' columns.","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/fix_empty_string.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fix the empty string in csv file — fix_empty_string","text":"","code":"if (FALSE) { # \\dontrun{ fix_empty_string(\"baseline_example_Nurse_220504\") } # }"},{"path":"https://bolin-wu.github.io/neartools/reference/get_all_colnames.html","id":null,"dir":"Reference","previous_headings":"","what":"Get all columns of several input data frames — get_all_colnames","title":"Get all columns of several input data frames — get_all_colnames","text":"functions gathers columns several data files examine together.","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/get_all_colnames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get all columns of several input data frames — get_all_colnames","text":"","code":"get_all_colnames(df_name = NULL)"},{"path":"https://bolin-wu.github.io/neartools/reference/get_all_colnames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get all columns of several input data frames — get_all_colnames","text":"df_name vector data files' names. strings.","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/get_all_colnames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get all columns of several input data frames — get_all_colnames","text":"list two elements: metadata tibble files' names, index variables' names, labels missing values' percentage. n_files tibble column number data file.","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/get_all_colnames.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get all columns of several input data frames — get_all_colnames","text":"","code":"if (FALSE) { # \\dontrun{  # read data to the global environment  fake_snack_df <- neartools::fake_snack_df fake_caide_df <- neartools::fake_caide_df  # put these two files together and check their columns  df_files <- c(\"fake_snack_df\", \"fake_caide_df\") neartools::get_all_colnames(df_name = df_files)  # One can also use ls() and str_subset() function to # extract interested data files from the global environment # for example if you want to take patterns like # \"SNAC_K_BMI_baseline\", \"SNAC_K_BMI_FU1\",\"SNAC_K_BMI_FU2\":  df_files <- str_subset(ls(), \"^SNAC_K.*_(FU|baseline)*[1-9]*$\") } # }"},{"path":"https://bolin-wu.github.io/neartools/reference/get_date_digit.html","id":null,"dir":"Reference","previous_headings":"","what":"Inspect the a date column's digit — get_date_digit","title":"Inspect the a date column's digit — get_date_digit","text":"received files date variables, sometimes good 'date' format. Instead, might pure numeric values different digits. case, check ideal eight-digit number . digits may just make sense ask DBM . function aims make inspection easier.","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/get_date_digit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Inspect the a date column's digit — get_date_digit","text":"","code":"get_date_digit(   df_arg,   id_string,   date_string,   required_digits,   required_leading_digit = 2 )"},{"path":"https://bolin-wu.github.io/neartools/reference/get_date_digit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Inspect the a date column's digit — get_date_digit","text":"df_arg Input data frame. id_string string contained ID's column name. date_string string contained date's column name. required_digits expected date's digit. Ideally 8, .e. yyyymmdd. required_leading_digit expected date's leading digit.","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/get_date_digit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Inspect the a date column's digit — get_date_digit","text":"list three elements: count_digit tibble ID, date date's digits. wrong_digit tibble dates required digits. leading_digit tibble dates required digits leading number.","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/get_date_digit.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Inspect the a date column's digit — get_date_digit","text":"Given data frame, strings containing ID date columns' name, required digits, users can find observations wrong digits. dates required digits, can check required numbers, cases \"1\" \"2\" eight-digit numbers. date_string argument lead unique date column. function supports inspect one date column one time.","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/get_date_digit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Inspect the a date column's digit — get_date_digit","text":"","code":"if (FALSE) { # \\dontrun{  date_digit_info <- get_date_digit(   df_arg = fake_snack_df,   id_string = \"Lop\",   date_string = \"numeric_date\",   required_digits = 8, required_leading_digit = 2 )  # get the digits date_digit_info$count_digit  # get the wrong dates date_digit_info$wrong_digit  # check if the leading number is as required date_digit_info$leading_digit } # }"},{"path":"https://bolin-wu.github.io/neartools/reference/get_diff_cols.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the columns with different values — get_diff_cols","title":"Get the columns with different values — get_diff_cols","text":"received data files, rows contain duplicated IDs. problem ID unique. function finds columns different values comparing two records ID. useful deciding row keep find two duplicated IDs (e.g. using get_dup_id(). function conquers problem 'NA' values comparing columns. available functions default returns 'NA' long missing value columns. However, also want know columns one record gives \"NA\" values.","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/get_diff_cols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the columns with different values — get_diff_cols","text":"","code":"get_diff_cols(data_file, id_str, id_num)"},{"path":"https://bolin-wu.github.io/neartools/reference/get_diff_cols.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the columns with different values — get_diff_cols","text":"data_file file contain duplicated IDs. id_str string contains ID name. E.g. \"lopnr\". id_num specific ID user want examine.","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/get_diff_cols.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the columns with different values — get_diff_cols","text":"returns tibble columns containing different values.","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/get_diff_cols.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Get the columns with different values — get_diff_cols","text":"function can compare 2 rows. work ID duplicated 2 rows.","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/get_diff_cols.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the columns with different values — get_diff_cols","text":"","code":"if (FALSE) { # \\dontrun{ dup_id <- get_dup_id(df = df_dup_id, id_str = \"id\")$replicated_id get_diff_cols(data = df_dup_id, id_str = \"id\", id_num = dup_id[1]) } # }"},{"path":"https://bolin-wu.github.io/neartools/reference/get_dup_id.html","id":null,"dir":"Reference","previous_headings":"","what":"Find replicated id in a data file — get_dup_id","title":"Find replicated id in a data file — get_dup_id","text":"NEAR, use ID (lopnr) identify specific participant. two people share ID, must problem. function used : Check data file replicated ID. replicated id, find IDs replicated.","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/get_dup_id.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find replicated id in a data file — get_dup_id","text":"","code":"get_dup_id(df, id_str)"},{"path":"https://bolin-wu.github.io/neartools/reference/get_dup_id.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find replicated id in a data file — get_dup_id","text":"df tibble examined. id_str string contains ID name. E.g. \"lopnr\".","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/get_dup_id.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find replicated id in a data file — get_dup_id","text":"list examination results logic_rep: df replicated ID . replicated_id: Specific replicated ID. May need report local DBM.","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/get_dup_id.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find replicated id in a data file — get_dup_id","text":"","code":"if (FALSE) { # \\dontrun{ neartools::get_dup_id(df_dup_id, id_str = \"id\") } # }"},{"path":"https://bolin-wu.github.io/neartools/reference/get_label_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Get labels of a dataset — get_label_df","title":"Get labels of a dataset — get_label_df","text":"work, many times receive SPSS STATA data files labels. function extract labels read-data, turn tibble format. can help us inspect data conveniently.","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/get_label_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get labels of a dataset — get_label_df","text":"","code":"get_label_df(df_w_label)"},{"path":"https://bolin-wu.github.io/neartools/reference/get_label_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get labels of a dataset — get_label_df","text":"df_w_label data set labels. One can read SPSS STATA files haven package.","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/get_label_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get labels of a dataset — get_label_df","text":"tibble three columns: variable original variables' names. label_char variables corresponding labels. na_percent Ratio missing values.","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/get_label_df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get labels of a dataset — get_label_df","text":"","code":"if (FALSE) { # \\dontrun{ get_label_df(fake_snack_df) } # }"},{"path":"https://bolin-wu.github.io/neartools/reference/get_pretty_template.html","id":null,"dir":"Reference","previous_headings":"","what":"get_pretty_template — get_pretty_template","title":"get_pretty_template — get_pretty_template","text":"Automatically create & open rmd file nice looking template. facilitates communication researchers & tracking records. User can choose output file word”, “pdf” “html”. default complies “word” file.","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/get_pretty_template.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_pretty_template — get_pretty_template","text":"","code":"get_pretty_template(   name = NULL,   subDir = \"rmd\",   output_file = \"word\",   open = interactive(),   ... )"},{"path":"https://bolin-wu.github.io/neartools/reference/get_pretty_template.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_pretty_template — get_pretty_template","text":"name Name rmd file. Please use '/' file name (need add suffix \".Rmd\"). subDir Name folder rmd file created. Remember connect sub-dir names '/'. default 'rmd'. output_file output file's type. \"word\", \"pdf\" \"html\", default \"word\" open file opened created ... Arguments passed use_template","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/get_pretty_template.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get_pretty_template — get_pretty_template","text":"","code":"if (FALSE) { # \\dontrun{ neartools::get_pretty_template(   subDir = \"Enquiry/SNAC\",   name = \"snac_k_inspection\",   output_file = \"word\" ) } # }"},{"path":"https://bolin-wu.github.io/neartools/reference/get_unique_join.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the unique join of two tables — get_unique_join","title":"Get the unique join of two tables — get_unique_join","text":"function joins 2 tibbles generates unique columns record non-NA values 2 identical column names.","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/get_unique_join.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the unique join of two tables — get_unique_join","text":"","code":"get_unique_join(tibble_names, join_type, by_cols)"},{"path":"https://bolin-wu.github.io/neartools/reference/get_unique_join.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the unique join of two tables — get_unique_join","text":"tibble_names vector tibbles' names R environment. join_type one 'full_join', 'left_join', 'inner_join'. by_cols include columns format `join_by` can interpret.","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/get_unique_join.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the unique join of two tables — get_unique_join","text":"tibble contains unique columns record non-NA values identical columns two tables.","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/get_unique_join.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get the unique join of two tables — get_unique_join","text":"motivation create function Bolin extract SNAC-N variables, finds wave 3, overlapping information different sources. example, physician variables, 3 files: wave 3 participants. cohort 1's follow-wave 3. cohort 2's baseline. overlapping participants variables. addition, participant variable, NA one file whereas NA file. using join function, common columns separated '.x' '.y'. use coalesce pick one without NA. delete '.x' '.y'  columns. avoid repetitive work, Bolin writing function take information different data files.","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/get_unique_join.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the unique join of two tables — get_unique_join","text":"","code":"if (FALSE) { # \\dontrun{  ## fake_snacn_ph_wave3 and fake_snacn_ph_fu contains same variable 'ph121'. ## but for some obs, in one file in NA, in the other file is not NA. E.g. Lopnr = 10  left_join(fake_snacn_ph_wave3, fake_snacn_ph_fu, by = join_by(Lopnr == N1lopnr, age))  ## let's just combine the info together and only keep the one without NA.   get_unique_join(tibble_names = c(\"fake_snacn_ph_wave3\", \"fake_snacn_ph_fu\"),                join_type = \"full_join\",                by_cols = \"Lopnr == N1lopnr, age\") } # }"},{"path":"https://bolin-wu.github.io/neartools/reference/import_bulk.html","id":null,"dir":"Reference","previous_headings":"","what":"Bulk import SPSS(sav) and STATA(dta), MS Excel(csv) Rdata and RDS files into R — import_bulk","title":"Bulk import SPSS(sav) and STATA(dta), MS Excel(csv) Rdata and RDS files into R — import_bulk","text":"Many NEAR databases stroe data SPSS STATA MS Excel. Therefore chances need import many different files time R analysis. function bulk import data files types mentioned R environment.","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/import_bulk.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bulk import SPSS(sav) and STATA(dta), MS Excel(csv) Rdata and RDS files into R — import_bulk","text":"","code":"import_bulk(data_dir = NULL, file_type = \"all\")"},{"path":"https://bolin-wu.github.io/neartools/reference/import_bulk.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bulk import SPSS(sav) and STATA(dta), MS Excel(csv) Rdata and RDS files into R — import_bulk","text":"data_dir folder storing data files. file_type data file type. Options 'sav' 'dta', 'csv', 'Rdata' 'rds'. Default ''. sav uses read_sav() 'haven' package. dta uses read_dta() 'haven' package. csv uses read.csv() 'utils' package. xlsx uses read_excel() 'readxl' package. Rdata rds uses readRDS() load() R base. default '' imports five kinds data.","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/import_bulk.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bulk import SPSS(sav) and STATA(dta), MS Excel(csv) Rdata and RDS files into R — import_bulk","text":"Two results follows: Import SPSS files data_dir R global environment; List names tables imported R.","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/import_bulk.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Bulk import SPSS(sav) and STATA(dta), MS Excel(csv) Rdata and RDS files into R — import_bulk","text":"function fast neat way defining data directory data_dir. careful importing csv files. messy since function just uses default parameters read.csv(). 'Rdata' files, can read 'Rdata', 'RData', \"rdata\". 'Rds' files, can read 'Rds' 'rds'.","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/import_bulk.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bulk import SPSS(sav) and STATA(dta), MS Excel(csv) Rdata and RDS files into R — import_bulk","text":"","code":"if (FALSE) { # \\dontrun{ # Assume the data files are in path:'data/raw/SNAC-K' db_dir <- here(\"data\", \"raw\", \"SNAC-K\")  # this import all csv, sav and dta files in the 'db_dir' import_bulk(data_dir = db_dir)  # this import only a specific type files import_bulk(data_dir = db_dir, file_type = \"sav\") } # }"},{"path":[]},{"path":[]},{"path":"https://bolin-wu.github.io/neartools/news/index.html","id":"update-get_unique_join-0-1-0","dir":"Changelog","previous_headings":"2024-06-06","what":"Update get_unique_join:","title":"neartools 0.1.0","text":"by_cols argument can take multiple columns join .","code":""},{"path":[]},{"path":"https://bolin-wu.github.io/neartools/news/index.html","id":"new-function-get_unique_join-0-1-0","dir":"Changelog","previous_headings":"2023-12-06","what":"New function get_unique_join:","title":"neartools 0.1.0","text":"Joins multiple tibbles generates unique columns record non-NA values identical column names.","code":""},{"path":[]},{"path":"https://bolin-wu.github.io/neartools/news/index.html","id":"new-function-get_diff_cols-0-1-0","dir":"Changelog","previous_headings":"2023-10-26","what":"New function get_diff_cols","title":"neartools 0.1.0","text":"function finds columns different values comparing two records ID.","code":""},{"path":"https://bolin-wu.github.io/neartools/news/index.html","id":"update-fix_dup_id-0-1-0","dir":"Changelog","previous_headings":"2023-10-26","what":"Update fix_dup_id","title":"neartools 0.1.0","text":"function name now called get_dup_id. Remove output new id data frame new id. old version, generation ID make sense, ’s simpliy purpose definining primary syntax MySQL. Now longer needed. Therefore two outputs deleted output list.","code":""},{"path":[]},{"path":"https://bolin-wu.github.io/neartools/news/index.html","id":"update-import_bulk-0-1-0","dir":"Changelog","previous_headings":"2023-10-12","what":"Update import_bulk","title":"neartools 0.1.0","text":"Now supports importing ‘rds’ ‘Rdata’ files.","code":""},{"path":[]},{"path":"https://bolin-wu.github.io/neartools/news/index.html","id":"update-get_all_colnames-0-1-0","dir":"Changelog","previous_headings":"2023-04-27","what":"Update get_all_colnames","title":"neartools 0.1.0","text":"Now metadata tibble ‘na_percent’.","code":""},{"path":"https://bolin-wu.github.io/neartools/news/index.html","id":"update-export_sav_to_csv-0-1-0","dir":"Changelog","previous_headings":"2023-04-27","what":"Update export_sav_to_csv()","title":"neartools 0.1.0","text":"Add new argument ‘output_dir’ argument.","code":""},{"path":[]},{"path":"https://bolin-wu.github.io/neartools/news/index.html","id":"update-get_all_columns-0-1-0","dir":"Changelog","previous_headings":"2023-04-21","what":"Update get_all_columns()","title":"neartools 0.1.0","text":"Add new column ‘label_char’ result tibble.","code":""},{"path":[]},{"path":"https://bolin-wu.github.io/neartools/news/index.html","id":"update-get_label_df-0-1-0","dir":"Changelog","previous_headings":"2023-04-19","what":"Update get_label_df()","title":"neartools 0.1.0","text":"Add new column ‘na_percent’ result tibble.","code":""},{"path":[]},{"path":"https://bolin-wu.github.io/neartools/news/index.html","id":"add-new-function-get_all_columns-0-1-0","dir":"Changelog","previous_headings":"2023-04-18","what":"Add new function get_all_columns()","title":"neartools 0.1.0","text":"gather several data files examine together.","code":""}]
