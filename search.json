[{"path":"https://bolin-wu.github.io/neartools/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 neartools authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://bolin-wu.github.io/neartools/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Bolin Wu. Author, maintainer.","code":""},{"path":"https://bolin-wu.github.io/neartools/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Wu B (2023). neartools: Useful Tools Daily NEAR Work Tasks. https://github.com/Bolin-Wu/neartools, https://bolin-wu.github.io/neartools/.","code":"@Manual{,   title = {neartools: Useful Tools for Daily NEAR Work Tasks},   author = {Bolin Wu},   year = {2023},   note = {https://github.com/Bolin-Wu/neartools, https://bolin-wu.github.io/neartools/}, }"},{"path":"https://bolin-wu.github.io/neartools/index.html","id":"motivation","dir":"","previous_headings":"","what":"Useful Tools for Daily NEAR Work Tasks","title":"Useful Tools for Daily NEAR Work Tasks","text":"many repetitive works data harmonization keeping track communication database managers researchers. goal package practice “don’t repeat ” (DRY) principle, making daily work handy.","code":""},{"path":"https://bolin-wu.github.io/neartools/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Useful Tools for Daily NEAR Work Tasks","text":"can install development version neartools GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"Bolin-Wu/neartools\", force = TRUE)"},{"path":"https://bolin-wu.github.io/neartools/index.html","id":"tools","dir":"","previous_headings":"","what":"Tools","title":"Useful Tools for Daily NEAR Work Tasks","text":"Example data: package contains functions follows:","code":"library(neartools) # read data fake_snack_df <- fake_snack_df fake_caide_df <- fake_caide_df"},{"path":"https://bolin-wu.github.io/neartools/index.html","id":"r-markdown-templates","dir":"","previous_headings":"","what":"R markdown templates","title":"Useful Tools for Daily NEAR Work Tasks","text":"get_pretty_template: Automatically create & open rmd file nice looking template. facilitates communication researchers & tracking records. User can choose output file word”, “pdf” “html”. default complies “word” file.","code":"# create & open a rmd file get_pretty_template(name = \"Data_inspection_db\")"},{"path":"https://bolin-wu.github.io/neartools/index.html","id":"data-inspection","dir":"","previous_headings":"","what":"Data inspection","title":"Useful Tools for Daily NEAR Work Tasks","text":"get_label_df: Get labels data frame. filtering result, users can quickly select interested variables check missing value percentages. get_date_digit: Inspect date numeric digit form. Filter dates required form. get_all_colnames: Gather multiple data files examine columns’ names labels together.","code":"# get the label of SPSS and STATA files imported in R label_df <- get_label_df(df_w_label = fake_snack_df) # get the date digits and find wrong ones get_date_digit(   df_arg = fake_snack_df,   id_string = \"Lop\",   date_string = \"numeric_date\",   required_digits = 8,   required_leading_num = 1 ) # get columns of all interested data files df_files <- c(\"fake_snack_df\", \"fake_caide_df\") get_all_colnames(df_name = df_files)"},{"path":"https://bolin-wu.github.io/neartools/index.html","id":"data-import-and-export","dir":"","previous_headings":"","what":"Data import and export","title":"Useful Tools for Daily NEAR Work Tasks","text":"export_sav_to_csv: Convert SPSS data files (.sav) csv files. conversion needed maelstrom harmonization package read .sav data. function can prevent repetitive work converting .sav .csv one one. import_bulk: Bulk import SPSS, STATA MS Excel files R global environment. continued….","code":"# convert SPSS files export_sav_to_csv(\"original_data\", \"SNAC-K\") # bulk import db_dir <- here(\"data\", \"raw\", \"SNAC-K\") # this import all csv, sav and dta files in the 'db_dir' import_bulk(data_dir = db_dir) # this import only a specific type files import_bulk(data_dir = db_dir, file_type = \"sav\")"},{"path":"https://bolin-wu.github.io/neartools/index.html","id":"sql-database","dir":"","previous_headings":"","what":"SQL database","title":"Useful Tools for Daily NEAR Work Tasks","text":"fix_dup_id: Check existence ID duplication pinpoint .","code":"# check ID duplication fix_dup_id(df = baseline_example_Relative_220504, id_str = \"lopnr\")"},{"path":"https://bolin-wu.github.io/neartools/index.html","id":"changelog","dir":"","previous_headings":"","what":"Changelog","title":"Useful Tools for Daily NEAR Work Tasks","text":"Please check NEWS.md history updates.","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/df_fix_dup_id.html","id":null,"dir":"Reference","previous_headings":"","what":"Example data frame — df_fix_dup_id","title":"Example data frame — df_fix_dup_id","text":"data frame test fix_dup_id function package.","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/df_fix_dup_id.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example data frame — df_fix_dup_id","text":"","code":"df_fix_dup_id"},{"path":"https://bolin-wu.github.io/neartools/reference/df_fix_dup_id.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example data frame — df_fix_dup_id","text":"data frame 2 variables: id, num.","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/export_sav_to_csv.html","id":null,"dir":"Reference","previous_headings":"","what":"Export the SPSS data files to csv files — export_sav_to_csv","title":"Export the SPSS data files to csv files — export_sav_to_csv","text":"Maelstrom harmonization package, command 'mlstr_file_index_read()' read study specific data sets. can read commonly used .csv, .dta files, .sav (SPSS) data. Therefore function can help user transform sav data sets csv data, instead using 'read_sav()' function transform every data set one one manually.","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/export_sav_to_csv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export the SPSS data files to csv files — export_sav_to_csv","text":"","code":"export_sav_to_csv(data_folder_name, db_name, out_dir = NULL)"},{"path":"https://bolin-wu.github.io/neartools/reference/export_sav_to_csv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export the SPSS data files to csv files — export_sav_to_csv","text":"data_folder_name name folder data stored. db_name name specific database's folder, located `data_folder_name`. out_dir optional. name output directory, instead using <data_folder_name>/<db_name>/csv_format.","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/export_sav_to_csv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Export the SPSS data files to csv files — export_sav_to_csv","text":"folder called \"csv_format\" generated 'db_name's folder, storing transformed csv files.","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/export_sav_to_csv.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Export the SPSS data files to csv files — export_sav_to_csv","text":"Assume bunch `.sav` files current working directory: \"original_data/SNAC-K\". may want transform `.csv` files can recognized Maelstrom harmonization package. running function, new folder \"csv_format\" storing transformed SNAC-K csv files \"original_data/SNAC-K\".","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/export_sav_to_csv.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Export the SPSS data files to csv files — export_sav_to_csv","text":"Please make sure `original_data` folder current working directory.","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/export_sav_to_csv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Export the SPSS data files to csv files — export_sav_to_csv","text":"","code":"if (FALSE) { export_sav_to_csv(\"original_data\", \"SNAC_K\") }"},{"path":"https://bolin-wu.github.io/neartools/reference/fake_caide_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Fake CAIDE data — fake_caide_df","title":"Fake CAIDE data — fake_caide_df","text":"randomized CAIDE data set, meta data preserved.","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/fake_caide_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fake CAIDE data — fake_caide_df","text":"","code":"fake_caide_df"},{"path":"https://bolin-wu.github.io/neartools/reference/fake_caide_df.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Fake CAIDE data — fake_caide_df","text":"data frame 27 variables 1000 random obs.","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/fake_caide_df.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fake CAIDE data — fake_caide_df","text":"Random values generated vroom::gen_tbl.","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/fake_snack_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Fake SNAC-K data — fake_snack_df","title":"Fake SNAC-K data — fake_snack_df","text":"randomized SNAC-K data set, metadata preserved.","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/fake_snack_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fake SNAC-K data — fake_snack_df","text":"","code":"fake_snack_df"},{"path":"https://bolin-wu.github.io/neartools/reference/fake_snack_df.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Fake SNAC-K data — fake_snack_df","text":"data frame 15 variables 3365 random obs.","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/fake_snack_df.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fake SNAC-K data — fake_snack_df","text":"Random values generated rnorm() sample().","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/fix_dup_id.html","id":null,"dir":"Reference","previous_headings":"","what":"Fix replicated id in a data file — fix_dup_id","title":"Fix replicated id in a data file — fix_dup_id","text":"NEAR, use ID (lopnr) identify specific participant. two people share ID, must problem. function used : Check data file replicated ID. replicated id, find IDs replicated. Generate new distinct new id & append original ID column. new ID can temporarily used primary key importing data MySQL.","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/fix_dup_id.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fix replicated id in a data file — fix_dup_id","text":"","code":"fix_dup_id(df, id_str)"},{"path":"https://bolin-wu.github.io/neartools/reference/fix_dup_id.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fix replicated id in a data file — fix_dup_id","text":"df tibble examined. id_str string contain ID name. E.g. \"lopnr\".","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/fix_dup_id.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fix replicated id in a data file — fix_dup_id","text":"list examination results logic_rep: df replicated ID . new_lopnr: new distinct ID. E.g, people ID = 2, new ID 2.0, 2.1. replicated_id: Specific replicated ID. May need report local DBM. df_update: new df new_lopnr appened original ID column.","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/fix_dup_id.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fix replicated id in a data file — fix_dup_id","text":"","code":"if (FALSE) { neartools::fix_dup_id(df_fix_dup_id, id_str = \"id\") }"},{"path":"https://bolin-wu.github.io/neartools/reference/fix_empty_string.html","id":null,"dir":"Reference","previous_headings":"","what":"Fix the empty string in csv file — fix_empty_string","title":"Fix the empty string in csv file — fix_empty_string","text":"importing csv file MySQL workbench, cell empty strings, 'Wizard Import' function skip row. fix problem, need replace empty string \"NA\" can import records MySQL.","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/fix_empty_string.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fix the empty string in csv file — fix_empty_string","text":"","code":"fix_empty_string(df_name)"},{"path":"https://bolin-wu.github.io/neartools/reference/fix_empty_string.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fix the empty string in csv file — fix_empty_string","text":"df_name tibble name R. string.","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/fix_empty_string.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fix the empty string in csv file — fix_empty_string","text":"tibble empty strings replaced 'NA'.","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/fix_empty_string.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Fix the empty string in csv file — fix_empty_string","text":"replacement applies 'character' columns.","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/fix_empty_string.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fix the empty string in csv file — fix_empty_string","text":"","code":"if (FALSE) { fix_empty_string(\"baseline_example_Nurse_220504\") }"},{"path":"https://bolin-wu.github.io/neartools/reference/get_all_colnames.html","id":null,"dir":"Reference","previous_headings":"","what":"Get all columns of several input data frames — get_all_colnames","title":"Get all columns of several input data frames — get_all_colnames","text":"functions gathers columns several data files examine together.","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/get_all_colnames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get all columns of several input data frames — get_all_colnames","text":"","code":"get_all_colnames(df_name = NULL)"},{"path":"https://bolin-wu.github.io/neartools/reference/get_all_colnames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get all columns of several input data frames — get_all_colnames","text":"df_name vector data files' names. strings.","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/get_all_colnames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get all columns of several input data frames — get_all_colnames","text":"list two elements: metadata tibble files' names, index variables' names labels. n_files tibble column number data file.","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/get_all_colnames.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get all columns of several input data frames — get_all_colnames","text":"","code":"if (FALSE) {  # read data to the global environment  fake_snack_df <- neartools::fake_snack_df fake_caide_df <- neartools::fake_caide_df  # put these two files together and check their columns  df_files <- c(\"fake_snack_df\", \"fake_caide_df\") neartools::get_all_colnames(df_name = df_files)  # One can also use ls() and str_subset() function to # extract interested data files from the global environment # for example if you want to take patterns like # \"SNAC_K_BMI_baseline\", \"SNAC_K_BMI_FU1\",\"SNAC_K_BMI_FU2\":  df_files <- str_subset(ls(), \"^SNAC_K.*_(FU|baseline)*[1-9]*$\") }"},{"path":"https://bolin-wu.github.io/neartools/reference/get_date_digit.html","id":null,"dir":"Reference","previous_headings":"","what":"Inspect the a date column's digit — get_date_digit","title":"Inspect the a date column's digit — get_date_digit","text":"received files date variables, sometimes good 'date' format. Instead, might pure numeric values different digits. case, check ideal eight-digit number . digits may just make sense ask DBM . function aims make inspection easier.","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/get_date_digit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Inspect the a date column's digit — get_date_digit","text":"","code":"get_date_digit(   df_arg,   id_string,   date_string,   required_digits,   required_leading_digit = 2 )"},{"path":"https://bolin-wu.github.io/neartools/reference/get_date_digit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Inspect the a date column's digit — get_date_digit","text":"df_arg Input data frame. id_string string contained ID's column name. date_string string contained date's column name. required_digits expected date's digit. Ideally 8, .e. yyyymmdd. required_leading_digit expected date's leading digit.","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/get_date_digit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Inspect the a date column's digit — get_date_digit","text":"list three elements: count_digit tibble ID, date date's digits. wrong_digit tibble dates required digits. leading_digit tibble dates required digits leading number.","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/get_date_digit.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Inspect the a date column's digit — get_date_digit","text":"Given data frame, strings containing ID date columns' name, required digits, users can find observations wrong digits. dates required digits, can check required numbers, cases \"1\" \"2\" eight-digit numbers. date_string argument lead unique date column. function supports inspect one date column one time.","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/get_date_digit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Inspect the a date column's digit — get_date_digit","text":"","code":"if (FALSE) {  date_digit_info <- get_date_digit(   df_arg = fake_snack_df,   id_string = \"Lop\",   date_string = \"numeric_date\",   required_digits = 8, required_leading_digit = 2 )  # get the digits date_digit_info$count_digit  # get the wrong dates date_digit_info$wrong_digit  # check if the leading number is as required date_digit_info$leading_digit }"},{"path":"https://bolin-wu.github.io/neartools/reference/get_label_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Get labels of a dataset — get_label_df","title":"Get labels of a dataset — get_label_df","text":"work, many times receive SPSS STATA data files labels. function extract labels read-data, turn tibble format. can help us inspect data conveniently.","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/get_label_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get labels of a dataset — get_label_df","text":"","code":"get_label_df(df_w_label)"},{"path":"https://bolin-wu.github.io/neartools/reference/get_label_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get labels of a dataset — get_label_df","text":"df_w_label data set labels. One can read SPSS STATA files haven package.","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/get_label_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get labels of a dataset — get_label_df","text":"tibble three columns: variable original variables' names. n_files variables corresponding labels. na_percent Ratio missing values.","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/get_label_df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get labels of a dataset — get_label_df","text":"","code":"if (FALSE) { get_label_df(fake_snack_df) }"},{"path":"https://bolin-wu.github.io/neartools/reference/get_pretty_template.html","id":null,"dir":"Reference","previous_headings":"","what":"get_pretty_template — get_pretty_template","title":"get_pretty_template — get_pretty_template","text":"Automatically create & open rmd file nice looking template. facilitates communication researchers & tracking records. User can choose output file word”, “pdf” “html”. default complies “word” file.","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/get_pretty_template.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_pretty_template — get_pretty_template","text":"","code":"get_pretty_template(   name = NULL,   subDir = \"rmd\",   output_file = \"word\",   open = interactive(),   ... )"},{"path":"https://bolin-wu.github.io/neartools/reference/get_pretty_template.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_pretty_template — get_pretty_template","text":"name Name rmd file. Please use '/' file name (need add suffix \".Rmd\"). subDir Name folder rmd file created. Remember connect sub-dir names '/'. default 'rmd'. output_file output file's type. \"word\", \"pdf\" \"html\", default \"word\" open file opened created ... Arguments passed use_template","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/get_pretty_template.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get_pretty_template — get_pretty_template","text":"","code":"if (FALSE) { neartools::get_pretty_template(   subDir = \"Enquiry/SNAC\",   name = \"snac_k_inspection\",   output_file = \"word\" ) }"},{"path":"https://bolin-wu.github.io/neartools/reference/import_bulk.html","id":null,"dir":"Reference","previous_headings":"","what":"Bulk import SPSS(sav) and STATA(dta) and MS Excel(csv) data into R — import_bulk","title":"Bulk import SPSS(sav) and STATA(dta) and MS Excel(csv) data into R — import_bulk","text":"Many NEAR databases stroe data SPSS STATA MS Excel. Therefore chances need import many different files time R analysis. function bulk import data files types mentioned R environment.","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/import_bulk.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bulk import SPSS(sav) and STATA(dta) and MS Excel(csv) data into R — import_bulk","text":"","code":"import_bulk(data_dir = NULL, file_type = \"all\")"},{"path":"https://bolin-wu.github.io/neartools/reference/import_bulk.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bulk import SPSS(sav) and STATA(dta) and MS Excel(csv) data into R — import_bulk","text":"data_dir folder storing data files. file_type data file type. Options 'sav' 'dta' 'csv'. Default ''. sav uses read_sav() 'haven' package. dta uses read_dta() 'haven' package. csv uses read.csv() 'utils' package. xlsx uses read_excel() 'readxl' package. default '' imports three kinds data.","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/import_bulk.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bulk import SPSS(sav) and STATA(dta) and MS Excel(csv) data into R — import_bulk","text":"Two results follows: Import SPSS files data_dir R global environment; List names tables imported R.","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/import_bulk.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Bulk import SPSS(sav) and STATA(dta) and MS Excel(csv) data into R — import_bulk","text":"function fast neat way defining data directory data_dir. careful importing csv files. messy since function just uses default parameters read.csv().","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/import_bulk.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bulk import SPSS(sav) and STATA(dta) and MS Excel(csv) data into R — import_bulk","text":"","code":"if (FALSE) { # Assume the data files are in path:'data/raw/SNAC-K' db_dir <- here(\"data\", \"raw\", \"SNAC-K\")  # this import all csv, sav and dta files in the 'db_dir' import_bulk(data_dir = db_dir)  # this import only a specific type files import_bulk(data_dir = db_dir, file_type = \"sav\") }"},{"path":[]},{"path":[]},{"path":"https://bolin-wu.github.io/neartools/news/index.html","id":"update-get_all_columns-0-1-0","dir":"Changelog","previous_headings":"2023-04-21","what":"Update get_all_columns()","title":"neartools 0.1.0","text":"Add new column ‘label_char’ result tibble.","code":""},{"path":[]},{"path":"https://bolin-wu.github.io/neartools/news/index.html","id":"update-get_label_df-0-1-0","dir":"Changelog","previous_headings":"2023-04-19","what":"Update get_label_df()","title":"neartools 0.1.0","text":"Add new column ‘na_percent’ result tibble.","code":""},{"path":[]},{"path":"https://bolin-wu.github.io/neartools/news/index.html","id":"add-new-function-get_all_columns-0-1-0","dir":"Changelog","previous_headings":"2023-04-18","what":"Add new function get_all_columns()","title":"neartools 0.1.0","text":"gather several data files examine together.","code":""}]
