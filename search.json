[{"path":"https://bolin-wu.github.io/neartools/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 neartools authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://bolin-wu.github.io/neartools/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Bolin Wu. Author, maintainer.","code":""},{"path":"https://bolin-wu.github.io/neartools/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Wu B (2023). neartools: Useful Tools Daily NEAR Work Tasks. https://github.com/Bolin-Wu/neartools, https://bolin-wu.github.io/neartools/.","code":"@Manual{,   title = {neartools: Useful Tools for Daily NEAR Work Tasks},   author = {Bolin Wu},   year = {2023},   note = {https://github.com/Bolin-Wu/neartools, https://bolin-wu.github.io/neartools/}, }"},{"path":"https://bolin-wu.github.io/neartools/index.html","id":"motivation","dir":"","previous_headings":"","what":"Useful Tools for Daily NEAR Work Tasks","title":"Useful Tools for Daily NEAR Work Tasks","text":"many repetitive works data harmonization keeping track communication researchers. goal package practice “don’t repeat ” (DRY) principle, making daily work handy.","code":""},{"path":"https://bolin-wu.github.io/neartools/index.html","id":"tools","dir":"","previous_headings":"","what":"Tools","title":"Useful Tools for Daily NEAR Work Tasks","text":"package contains functions follows: get_label_df: Get labels dataframe. filtering result, users can quickly select interested variables. get_na_number: extension get_label_df(). counts number NAs given string snippet variable label names. useful inspect variables unexpected number NAs. get_pretty_template: Automatically create & open rmd file nice looking template. facilitates communication researchers & tracking records. default complies html file. information R markdown please see . fix_dup_id: Check existence ID duplication pinpoint . export_sav_to_csv: Convert SPSS data files (.sav) csv files. conversion needed maelstrom harmonization package read .sav data. function can prevent repetitive work converting .sav .csv one one. import_bulk: Bulk import SPSS, STATA MS Excel files R global environment. continued….","code":""},{"path":"https://bolin-wu.github.io/neartools/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Useful Tools for Daily NEAR Work Tasks","text":"can install development version neartools GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"Bolin-Wu/neartools\", force = TRUE)"},{"path":"https://bolin-wu.github.io/neartools/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Useful Tools for Daily NEAR Work Tasks","text":"","code":"# load the package library(neartools)  # get the label of SPSS and STATA files imported in R get_label_df(df_w_label = fake_snack_df)  # get NA counts label_df <- get_label_df(fake_snack_df) get_na_number(data_df = fake_snack_df, label_df = label_df, keywords_label = \"dementia\")  # initiate a rmd file  get_pretty_template(name = \"Reply to Prof XXX\", output_file = \"word\")  # check ID duplication fix_dup_id(df = baseline_example_Relative_220504, id_str = \"lopnr\")  # convert SPSS files export_sav_to_csv(\"original_data\", \"SNAC-K\")  # bulk import db_dir <- here(\"data\", \"raw\",\"SNAC-K\") # this import all csv, sav and dta files in the 'db_dir' import_bulk(data_dir = db_dir) # this import only a specific type files import_bulk(data_dir = db_dir, file_type = 'sav')"},{"path":"https://bolin-wu.github.io/neartools/reference/df_fix_dup_id.html","id":null,"dir":"Reference","previous_headings":"","what":"Example data frame — df_fix_dup_id","title":"Example data frame — df_fix_dup_id","text":"data frame test fix_dup_id function package.","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/df_fix_dup_id.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example data frame — df_fix_dup_id","text":"","code":"df_fix_dup_id"},{"path":"https://bolin-wu.github.io/neartools/reference/df_fix_dup_id.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example data frame — df_fix_dup_id","text":"data frame 2 variables: id, num.","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/export_sav_to_csv.html","id":null,"dir":"Reference","previous_headings":"","what":"Export the SPSS data files to csv files — export_sav_to_csv","title":"Export the SPSS data files to csv files — export_sav_to_csv","text":"Maelstrom harmonization package, command 'mlstr_file_index_read()' read study specific data sets. can read commonly used .csv, .dta files, .sav (SPSS) data. Therefore function can help user transform sav data sets csv data, instead using 'read_sav()' function transform every data set one one manually.","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/export_sav_to_csv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export the SPSS data files to csv files — export_sav_to_csv","text":"","code":"export_sav_to_csv(data_folder_name, db_name)"},{"path":"https://bolin-wu.github.io/neartools/reference/export_sav_to_csv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export the SPSS data files to csv files — export_sav_to_csv","text":"data_folder_name name folder data stored. db_name name specific database's folder, located `data_folder_name`.","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/export_sav_to_csv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Export the SPSS data files to csv files — export_sav_to_csv","text":"folder called \"csv_format\" generated 'db_name's folder, storing transformed csv files.","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/export_sav_to_csv.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Export the SPSS data files to csv files — export_sav_to_csv","text":"Assume bunch `.sav` files current working directory: \"original_data/SNAC-K\". may want transform `.csv` files can recognized Maelstrom harmonization package. running function, new folder \"csv_format\" storing transformed SNAC-K csv files \"original_data/SNAC-K\".","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/export_sav_to_csv.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Export the SPSS data files to csv files — export_sav_to_csv","text":"Please make sure `original_data` folder current working directory.","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/export_sav_to_csv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Export the SPSS data files to csv files — export_sav_to_csv","text":"","code":"if (FALSE) { export_sav_to_csv(\"original_data\", \"SNAC_K\") }"},{"path":"https://bolin-wu.github.io/neartools/reference/fake_caide_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Fake CAIDE data — fake_caide_df","title":"Fake CAIDE data — fake_caide_df","text":"randomized CAIDE data set, meta data preserved.","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/fake_caide_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fake CAIDE data — fake_caide_df","text":"","code":"fake_caide_df"},{"path":"https://bolin-wu.github.io/neartools/reference/fake_caide_df.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Fake CAIDE data — fake_caide_df","text":"data frame 27 variables 1000 random obs.","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/fake_caide_df.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fake CAIDE data — fake_caide_df","text":"Random values generated vroom::gen_tbl.","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/fake_snack_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Fake SNAC-K data — fake_snack_df","title":"Fake SNAC-K data — fake_snack_df","text":"randomized SNAC-K data set, metadata preserved.","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/fake_snack_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fake SNAC-K data — fake_snack_df","text":"","code":"fake_snack_df"},{"path":"https://bolin-wu.github.io/neartools/reference/fake_snack_df.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Fake SNAC-K data — fake_snack_df","text":"data frame 15 variables 3365 random obs.","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/fake_snack_df.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fake SNAC-K data — fake_snack_df","text":"Random values generated rnorm() sample().","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/fix_dup_id.html","id":null,"dir":"Reference","previous_headings":"","what":"Fix replicated id in a data file — fix_dup_id","title":"Fix replicated id in a data file — fix_dup_id","text":"NEAR, use ID (lopnr) identify specific participant. two people share ID, must problem. function used : Check data file replicated ID. replicated id, find IDs replicated. Generate new distinct new id & append original ID column. new ID can temporarily used primary key importing data MySQL.","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/fix_dup_id.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fix replicated id in a data file — fix_dup_id","text":"","code":"fix_dup_id(df, id_str)"},{"path":"https://bolin-wu.github.io/neartools/reference/fix_dup_id.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fix replicated id in a data file — fix_dup_id","text":"df tibble examined. id_str string contain ID name. E.g. \"lopnr\".","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/fix_dup_id.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fix replicated id in a data file — fix_dup_id","text":"list examination results logic_rep: df replicated ID . new_lopnr: new distinct ID. E.g, people ID = 2, new ID 2.0, 2.1. replicated_id: Specific replicated ID. May need report local DBM. df_update: new df new_lopnr appened original ID column.","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/fix_dup_id.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fix replicated id in a data file — fix_dup_id","text":"","code":"if (FALSE) { neartools::fix_dup_id(df_fix_dup_id, id_str = 'id') }"},{"path":"https://bolin-wu.github.io/neartools/reference/fix_empty_string.html","id":null,"dir":"Reference","previous_headings":"","what":"Fix the empty string in csv file — fix_empty_string","title":"Fix the empty string in csv file — fix_empty_string","text":"importing csv file MySQL workbench, cell empty strings, 'Wizard Import' function skip row. fix problem, need replace empty string \"NA\" can import records MySQL.","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/fix_empty_string.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fix the empty string in csv file — fix_empty_string","text":"","code":"fix_empty_string(df_name)"},{"path":"https://bolin-wu.github.io/neartools/reference/fix_empty_string.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fix the empty string in csv file — fix_empty_string","text":"df_name tibble name R. string.","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/fix_empty_string.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fix the empty string in csv file — fix_empty_string","text":"tibble empty strings replaced 'NA'.","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/fix_empty_string.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Fix the empty string in csv file — fix_empty_string","text":"replacement applies 'character' columns.","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/fix_empty_string.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fix the empty string in csv file — fix_empty_string","text":"","code":"if (FALSE) { fix_empty_string(\"baseline_example_Nurse_220504\") }"},{"path":"https://bolin-wu.github.io/neartools/reference/get_label_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Get labels of a dataset — get_label_df","title":"Get labels of a dataset — get_label_df","text":"work, many times receive SPSS STATA data files labels. function extract labels read-data, turn tibble format. can help us inspect data conveniently.","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/get_label_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get labels of a dataset — get_label_df","text":"","code":"get_label_df(df_w_label)"},{"path":"https://bolin-wu.github.io/neartools/reference/get_label_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get labels of a dataset — get_label_df","text":"df_w_label data set labels. One can read SPSS STATA files haven package.","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/get_label_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get labels of a dataset — get_label_df","text":"tibble variable label names","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/get_label_df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get labels of a dataset — get_label_df","text":"","code":"if (FALSE) { get_label_df(fake_snack_df) }"},{"path":"https://bolin-wu.github.io/neartools/reference/get_na_number.html","id":null,"dir":"Reference","previous_headings":"","what":"Get NA number of a dataset — get_na_number","title":"Get NA number of a dataset — get_na_number","text":"Given data set label data frame, user can search number NA strings variable names labels.","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/get_na_number.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get NA number of a dataset — get_na_number","text":"","code":"get_na_number(   data_df,   label_df = NULL,   keywords_label = NULL,   keywords_variable = NULL )"},{"path":"https://bolin-wu.github.io/neartools/reference/get_na_number.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get NA number of a dataset — get_na_number","text":"data_df data frame, preferably tibble. label_df lable data frame. Get neartools::get_label_df(data_df). keywords_label Keywords label. keywords_variable Keywords column names.","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/get_na_number.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get NA number of a dataset — get_na_number","text":"list related variables NA counts.","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/get_na_number.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get NA number of a dataset — get_na_number","text":"grepl() function search two keywards arguments.","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/get_na_number.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get NA number of a dataset — get_na_number","text":"","code":"if (FALSE) { label_df <- get_label_df(fake_snack_df) # search by label get_na_number(data_df = fake_snack_df, label_df = label_df, keywords_label = \"dementia\")  # search by variable name get_na_number(data_df = fake_snack_df, label_df = label_df, keywords_variable = \"edu\") }"},{"path":"https://bolin-wu.github.io/neartools/reference/get_pretty_template.html","id":null,"dir":"Reference","previous_headings":"","what":"get_pretty_template — get_pretty_template","title":"get_pretty_template — get_pretty_template","text":"Use skeleton.Rmd starting analysis. function creates new folder root project create rmd file nice-looking template .","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/get_pretty_template.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_pretty_template — get_pretty_template","text":"","code":"get_pretty_template(   name = NULL,   subDir = \"rmd\",   output_file = \"html\",   open = interactive(),   ... )"},{"path":"https://bolin-wu.github.io/neartools/reference/get_pretty_template.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_pretty_template — get_pretty_template","text":"name Name rmd file. Please use '/' file name. (need add suffix \".Rmd\") subDir Name folder rmd file created. Remember connect sub-dir names '/'. default 'rmd'. output_file \"word\" \"html\", default \"html\" open file opened created ... Arguments passed use_template","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/get_pretty_template.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get_pretty_template — get_pretty_template","text":"","code":"if (FALSE) {  neartools::get_pretty_template(subDir = 'Enquiry/SNAC',name = \"missing_value_problems\",output_file = \"word\") }"},{"path":"https://bolin-wu.github.io/neartools/reference/import_bulk.html","id":null,"dir":"Reference","previous_headings":"","what":"Bulk import SPSS(sav) and STATA(dta) and MS Excel(csv) data into R — import_bulk","title":"Bulk import SPSS(sav) and STATA(dta) and MS Excel(csv) data into R — import_bulk","text":"Many NEAR databases stroe data SPSS STATA MS Excel. Therefore chances need import many different files time R analysis. function bulk import data files types mentioned R environment.","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/import_bulk.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bulk import SPSS(sav) and STATA(dta) and MS Excel(csv) data into R — import_bulk","text":"","code":"import_bulk(data_dir = NULL, file_type = \"all\")"},{"path":"https://bolin-wu.github.io/neartools/reference/import_bulk.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bulk import SPSS(sav) and STATA(dta) and MS Excel(csv) data into R — import_bulk","text":"data_dir folder storing data files. file_type data file type. Options 'sav' 'dta' 'csv'. Default ''. sav uses read_sav() 'haven' package. dta uses read_dta() 'haven' package. csv uses read.csv() 'utils' package. xlsx uses read_excel() 'readxl' package. default '' imports three kinds data.","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/import_bulk.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bulk import SPSS(sav) and STATA(dta) and MS Excel(csv) data into R — import_bulk","text":"Two results follows: Import SPSS files data_dir R global environment; List names tables imported R.","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/import_bulk.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Bulk import SPSS(sav) and STATA(dta) and MS Excel(csv) data into R — import_bulk","text":"function fast neat way defining data directory data_dir. careful importing csv files. messy since function just uses default parameters read.csv().","code":""},{"path":"https://bolin-wu.github.io/neartools/reference/import_bulk.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bulk import SPSS(sav) and STATA(dta) and MS Excel(csv) data into R — import_bulk","text":"","code":"if (FALSE) { # Assume the data files are in path:'data/raw/SNAC-K' db_dir <- here(\"data\", \"raw\", \"SNAC-K\")  # this import all csv, sav and dta files in the 'db_dir' import_bulk(data_dir = db_dir)  # this import only a specific type files import_bulk(data_dir = db_dir, file_type = \"sav\") }"}]
